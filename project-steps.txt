ItemCatalogApp

+1-Create directory in: 
	~\Documents\UFSND\Part3- Backend DBs Apps\FSND-Virtual-Machine\vagrant
+2-Initialize git repo

3-Phase 1
	+-Write down functionality
	+-Route each function
	+-create the server
	+-create db infrastructure & populate
	+-create template rendering infrastructure
	+-Create a bootstrap boilerplate
	+-Create and render simple page for each function
	+-Design page structures for each page with bootstrap
		-main page, includes categories and latest
		-category items page includes categories and items belonging to that category
		-single item page includes description of an item
	+-Make pages display actual data from database
		-main page, includes categories and latest
		-category items page includes categories and items belonging to that category
		-single item page includes description of an item
	+-Implement Post methods and forms:
		-main page, add category
		-category items page : add items
		-single item page, edit, delete item
			*Optional => make user edit category by dropdown list
	+-Make categories and items clickable
	PROJECT FUNCTIONALITY & PHASE 1 ROUTES
		+1-host on port 8000
		2-'/' AND '/catalog'
			-'GET'    : Display all categories and latest 10 items
			**Optional ==
				-'POST' : Creates a new category : Login Required
			
		3-'/catalog/<string:category_name>/items'
			-'GET'    : Displays all items under that category alphabetically ordered
			-'POST'   : Creates a new item for that category : Login Required
			
		4-'/catalog/<string:category_name>/<string:item_name>'
			-'GET'    : Displays specific information about an item
				-(access from URL) Check wheter that item belongs to that category, 
					if not proceed to adding item to that category
			-'PUT'    : Edits the specific Item : Login Required
			-'DELETE' : Deletes the specific item : Login Required
		5-'/login/<string:provider>'
			-'GET'    : Shows login button for selected provider
			-'POST'   : Allows login with a oAuth provider given (Facebook / Google)
		6-'/logout/<string:provider>'
			-''       : Allows logout from oauth provider given
		



------------------------------------------------------------	
4-Phase 2
	-Login via providers
		-Google
			+-Get google authentication
			+-Get user data and store it in DB, make user available through Session
		*-Facebook
			-Get facebook authentication
			-Get user data and store it in DB, make user available through Session
			**FB doenst allow auth from http sites, and vagrant's default is http, switching to github auth
		-Github
			-Get Github authentication
			-Get user data and store it in DB, make user available through Session
		**TODO : Clear up the unnecessary method implementations
			
	+-Token based authentication
	+-Logout from providers
	+-JSON endpoints

------------------------------------------------------------
5-Phase 3
	+-Show Create / Edit / Delete only if the user is logged in and the item is created by user
	+-Beautify css & html
		+-Fix edit form bugs control on server side, if empty form comes, do nothing
	HERE>-Refactor serverside, with comments
	-pypchecker
	-Cross-Site Request Forgery protection via state in all Create, Update and Delete operations
	-@login required atribute

------------------------------------------------------------	
DB model

Category:
	id : int -> PK
	name : string -> unique

item : 
	id: int -> PK
	name : string ->
	*TODO* add description : string
	category_id : Category.id => FK
	created_at : dateTime
	created_by : User.id

User:
	id : int ->PK
	name : String 
	email : string -> unique
	picture : string
	access_token_google : string
	access_token_github : string 	
